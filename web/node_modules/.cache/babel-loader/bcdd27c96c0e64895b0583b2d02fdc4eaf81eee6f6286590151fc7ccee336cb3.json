{"ast":null,"code":"var _jsxFileName = \"/Users/mikecraig/Development/docker/ai/git-visualizer/git-visualizer-server/web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport pako from 'pako';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [commits, setCommits] = useState([]);\n  const [selectedCommit, setSelectedCommit] = useState('');\n  const [graph, setGraph] = useState([]);\n\n  // Fetch commit list (dynamic in GitHub Pages)\n  useEffect(() => {\n    // For testing, use a static list or fetch from /data/\n    // In GitHub Pages, files are served from repo root\n    axios.get('/commits').then(res => {\n      setCommits(res.data);\n    }).catch(err => console.error('Error loading commits:', err));\n  }, []);\n\n  // Fetch and render graph\n  useEffect(() => {\n    if (!selectedCommit) return;\n    axios.get(`/data/${selectedCommit}.json.gz`, {\n      responseType: 'arraybuffer'\n    }).then(res => {\n      const decompressed = pako.ungzip(new Uint8Array(res.data));\n      const json = JSON.parse(new TextDecoder().decode(decompressed));\n      const elements = [...json.nodes.map(node => ({\n        data: {\n          id: node.id,\n          label: node.id.split('/').pop(),\n          language: node.language\n        }\n      })), ...json.edges.map(edge => ({\n        data: {\n          source: edge.source,\n          target: edge.target\n        }\n      }))];\n      setGraph(elements);\n    }).catch(err => console.error('Error loading graph:', err));\n  }, [selectedCommit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Codebase Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedCommit,\n      onChange: e => setSelectedCommit(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select a commit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), commits.map(commit => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: commit,\n        children: commit\n      }, commit, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '600px',\n        border: '1px solid #ccc'\n      },\n      children: /*#__PURE__*/_jsxDEV(CytoscapeComponent, {\n        elements: graph,\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        layout: {\n          name: 'cose'\n        },\n        stylesheet: [{\n          selector: 'node',\n          style: {\n            label: 'data(label)',\n            fontSize: '12px',\n            backgroundColor: 'data(language)',\n            backgroundColorMap: {\n              js: '#f0db4f',\n              jsx: '#61dafb',\n              ts: '#3178c6',\n              tsx: '#3178c6'\n            }\n          }\n        }, {\n          selector: 'edge',\n          style: {\n            width: 2,\n            curveStyle: 'bezier',\n            lineColor: '#ccc'\n          }\n        }]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ccIIJxnsZP9XAt0OuZTg/DgWDyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","CytoscapeComponent","pako","axios","jsxDEV","_jsxDEV","App","_s","commits","setCommits","selectedCommit","setSelectedCommit","graph","setGraph","get","then","res","data","catch","err","console","error","responseType","decompressed","ungzip","Uint8Array","json","JSON","parse","TextDecoder","decode","elements","nodes","map","node","id","label","split","pop","language","edges","edge","source","target","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","commit","height","border","width","layout","name","stylesheet","selector","fontSize","backgroundColor","backgroundColorMap","js","jsx","ts","tsx","curveStyle","lineColor","_c","$RefreshReg$"],"sources":["/Users/mikecraig/Development/docker/ai/git-visualizer/git-visualizer-server/web/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CytoscapeComponent from 'react-cytoscapejs';\nimport pako from 'pako';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [commits, setCommits] = useState([]);\n  const [selectedCommit, setSelectedCommit] = useState('');\n  const [graph, setGraph] = useState([]);\n\n  // Fetch commit list (dynamic in GitHub Pages)\n  useEffect(() => {\n    // For testing, use a static list or fetch from /data/\n    // In GitHub Pages, files are served from repo root\n    axios.get('/commits')\n      .then(res => {\n        setCommits(res.data);\n      })\n      .catch(err => console.error('Error loading commits:', err));\n  }, []);\n\n  // Fetch and render graph\n  useEffect(() => {\n    if (!selectedCommit) return;\n    axios.get(`/data/${selectedCommit}.json.gz`, { responseType: 'arraybuffer' })\n      .then(res => {\n        const decompressed = pako.ungzip(new Uint8Array(res.data));\n        const json = JSON.parse(new TextDecoder().decode(decompressed));\n        const elements = [\n          ...json.nodes.map(node => ({\n            data: { id: node.id, label: node.id.split('/').pop(), language: node.language }\n          })),\n          ...json.edges.map(edge => ({\n            data: { source: edge.source, target: edge.target }\n          }))\n        ];\n        setGraph(elements);\n      })\n      .catch(err => console.error('Error loading graph:', err));\n  }, [selectedCommit]);\n\n  return (\n    <div style={{ padding: '20px' }}>\n      <h1>Codebase Visualization</h1>\n      <select\n        value={selectedCommit}\n        onChange={e => setSelectedCommit(e.target.value)}\n      >\n        <option value=\"\">Select a commit</option>\n        {commits.map(commit => (\n          <option key={commit} value={commit}>\n            {commit}\n          </option>\n        ))}\n      </select>\n      <div style={{ height: '600px', border: '1px solid #ccc' }}>\n        <CytoscapeComponent\n          elements={graph}\n          style={{ width: '100%', height: '100%' }}\n          layout={{ name: 'cose' }}\n          stylesheet={[\n            {\n              selector: 'node',\n              style: {\n                label: 'data(label)',\n                fontSize: '12px',\n                backgroundColor: 'data(language)',\n                backgroundColorMap: {\n                  js: '#f0db4f',\n                  jsx: '#61dafb',\n                  ts: '#3178c6',\n                  tsx: '#3178c6'\n                }\n              }\n            },\n            {\n              selector: 'edge',\n              style: { width: 2, curveStyle: 'bezier', lineColor: '#ccc' }\n            }\n          ]}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,kBAAkB,MAAM,mBAAmB;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACAG,KAAK,CAACW,GAAG,CAAC,UAAU,CAAC,CAClBC,IAAI,CAACC,GAAG,IAAI;MACXP,UAAU,CAACO,GAAG,CAACC,IAAI,CAAC;IACtB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnB,SAAS,CAAC,MAAM;IACd,IAAI,CAACU,cAAc,EAAE;IACrBP,KAAK,CAACW,GAAG,CAAC,SAASJ,cAAc,UAAU,EAAE;MAAEY,YAAY,EAAE;IAAc,CAAC,CAAC,CAC1EP,IAAI,CAACC,GAAG,IAAI;MACX,MAAMO,YAAY,GAAGrB,IAAI,CAACsB,MAAM,CAAC,IAAIC,UAAU,CAACT,GAAG,CAACC,IAAI,CAAC,CAAC;MAC1D,MAAMS,IAAI,GAAGC,IAAI,CAACC,KAAK,CAAC,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACP,YAAY,CAAC,CAAC;MAC/D,MAAMQ,QAAQ,GAAG,CACf,GAAGL,IAAI,CAACM,KAAK,CAACC,GAAG,CAACC,IAAI,KAAK;QACzBjB,IAAI,EAAE;UAAEkB,EAAE,EAAED,IAAI,CAACC,EAAE;UAAEC,KAAK,EAAEF,IAAI,CAACC,EAAE,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;UAAEC,QAAQ,EAAEL,IAAI,CAACK;QAAS;MAChF,CAAC,CAAC,CAAC,EACH,GAAGb,IAAI,CAACc,KAAK,CAACP,GAAG,CAACQ,IAAI,KAAK;QACzBxB,IAAI,EAAE;UAAEyB,MAAM,EAAED,IAAI,CAACC,MAAM;UAAEC,MAAM,EAAEF,IAAI,CAACE;QAAO;MACnD,CAAC,CAAC,CAAC,CACJ;MACD9B,QAAQ,CAACkB,QAAQ,CAAC;IACpB,CAAC,CAAC,CACDb,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,GAAG,CAAC,CAAC;EAC7D,CAAC,EAAE,CAACT,cAAc,CAAC,CAAC;EAEpB,oBACEL,OAAA;IAAKuC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BzC,OAAA;MAAAyC,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/B7C,OAAA;MACE8C,KAAK,EAAEzC,cAAe;MACtB0C,QAAQ,EAAEC,CAAC,IAAI1C,iBAAiB,CAAC0C,CAAC,CAACV,MAAM,CAACQ,KAAK,CAAE;MAAAL,QAAA,gBAEjDzC,OAAA;QAAQ8C,KAAK,EAAC,EAAE;QAAAL,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACxC1C,OAAO,CAACyB,GAAG,CAACqB,MAAM,iBACjBjD,OAAA;QAAqB8C,KAAK,EAAEG,MAAO;QAAAR,QAAA,EAChCQ;MAAM,GADIA,MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eACT7C,OAAA;MAAKuC,KAAK,EAAE;QAAEW,MAAM,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAiB,CAAE;MAAAV,QAAA,eACxDzC,OAAA,CAACJ,kBAAkB;QACjB8B,QAAQ,EAAEnB,KAAM;QAChBgC,KAAK,EAAE;UAAEa,KAAK,EAAE,MAAM;UAAEF,MAAM,EAAE;QAAO,CAAE;QACzCG,MAAM,EAAE;UAAEC,IAAI,EAAE;QAAO,CAAE;QACzBC,UAAU,EAAE,CACV;UACEC,QAAQ,EAAE,MAAM;UAChBjB,KAAK,EAAE;YACLR,KAAK,EAAE,aAAa;YACpB0B,QAAQ,EAAE,MAAM;YAChBC,eAAe,EAAE,gBAAgB;YACjCC,kBAAkB,EAAE;cAClBC,EAAE,EAAE,SAAS;cACbC,GAAG,EAAE,SAAS;cACdC,EAAE,EAAE,SAAS;cACbC,GAAG,EAAE;YACP;UACF;QACF,CAAC,EACD;UACEP,QAAQ,EAAE,MAAM;UAChBjB,KAAK,EAAE;YAAEa,KAAK,EAAE,CAAC;YAAEY,UAAU,EAAE,QAAQ;YAAEC,SAAS,EAAE;UAAO;QAC7D,CAAC;MACD;QAAAvB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC3C,EAAA,CA/EQD,GAAG;AAAAiE,EAAA,GAAHjE,GAAG;AAiFZ,eAAeA,GAAG;AAAC,IAAAiE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}